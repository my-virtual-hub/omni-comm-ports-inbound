name: SonarCloud and Qodana
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
        run: mvn -B ${{ github.ref != 'refs/heads/main' && '-U' || '' }} package --file pom.xml --settings .github/settings.xml
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
      - name: Sonar Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=marco-quicula_omni-communicator-domain-layer
      - name: Qodana Scan
        if: always()
        uses: JetBrains/qodana-action@v2023.3
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
      - name: Create Tag to Publish
        if: success() && github.event_name == 'push'
        run: |
          TIMESTAMP=$(date '+%Y-%m-%d-%H-%M-%S')
          RUN_NUMBER=${{ github.run_number }}
          BUILD_NAME="${TIMESTAMP}-${RUN_NUMBER}"
          git config --local user.email "github.action@quicula.com.br"
          git config --local user.name "GitHub Action Automation"
          git tag -a $BUILD_NAME -m "Build $$BUILD_NAME, by GitHub Action Automation" 
          git push origin $BUILD_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
